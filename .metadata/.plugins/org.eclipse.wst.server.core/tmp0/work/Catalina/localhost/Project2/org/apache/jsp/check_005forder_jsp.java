/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-05-12 11:31:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class check_005forder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("  <meta name=\"description\" content=\"\">\n");
      out.write("  <meta name=\"author\" content=\"Mark Otto, Jacob Thornton, and Bootstrap contributors\">\n");
      out.write("  <meta name=\"generator\" content=\"Hugo 0.82.0\">\n");
      out.write("  <title>Dashboard Template · Bootstrap v5.0</title>\n");
      out.write("\n");
      out.write("  <!-- <link rel=\"canonical\" href=\"https://getbootstrap.com/docs/5.0/examples/dashboard/\"> -->\n");
      out.write("   <!-- Bootstrap core CSS -->\n");
      out.write("   <link href=\"./css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("  <!-- Custom styles for this template -->\n");
      out.write("  <link href=\"./css/dashboard.css\" rel=\"stylesheet\">\n");
      out.write("  <!-- fontawesome -->\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.10.0/css/all.css\" />\n");
      out.write("  \n");
      out.write("\n");
      out.write("  <style>\n");
      out.write("    .bd-placeholder-img {\n");
      out.write("      font-size: 1.125rem;\n");
      out.write("      text-anchor: middle;\n");
      out.write("      -webkit-user-select: none;\n");
      out.write("      -moz-user-select: none;\n");
      out.write("      user-select: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #sidebarMenu a:hover {\n");
      out.write("      color: blue;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (min-width: 768px) {\n");
      out.write("      .bd-placeholder-img-lg {\n");
      out.write("        font-size: 3.5rem;\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("  <header class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n");
      out.write("    <a class=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"#\">Company name</a>\n");
      out.write("    <button class=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n");
      out.write("      data-bs-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("    </button>\n");
      out.write("    <input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n");
      out.write("    <ul class=\"navbar-nav px-3\">\n");
      out.write("      <li class=\"nav-item text-nowrap\">\n");
      out.write("        <a class=\"nav-link\" href=\"#\">Sign out</a>\n");
      out.write("      </li>\n");
      out.write("    </ul>\n");
      out.write("  </header>\n");
      out.write("  <div></div>\n");
      out.write("  <div class=\"container-fluid\">\n");
      out.write("    <div class=\"row\">\n");
      out.write("      <nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n");
      out.write("        <div class=\"position-sticky pt-3\">\n");
      out.write("          <ul class=\"nav flex-column\">\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link\" aria-current=\"page\" href=\"./dashboard.html\">\n");
      out.write("                <span class=\"me-1\"><i class=\"fas fa-tachometer-alt\"></i></span>\n");
      out.write("                Dashboard\n");
      out.write("              </a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link\" href=\"./login_1.jsp\">\n");
      out.write("                <span class=\"me-1\"><i class=\"fas fa-sign-in-alt\"></i></span>\n");
      out.write("                會員\n");
      out.write("              </a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link active\" href=\"./Login.jsp\">\n");
      out.write("                <span class=\"me-1\"><i class=\"fas fa-funnel-dollar\"></i></span>\n");
      out.write("                下單\n");
      out.write("              </a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link\" href=\"./Post_3.jsp\">\n");
      out.write("                <span class=\"me-1\"><i class=\"far fa-comment-dots\"></i></span>\n");
      out.write("                討論\n");
      out.write("              </a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link\" href=\"./Buy_4.html\">\n");
      out.write("                <span class=\"me-1\"><i class=\"fas fa-dice-d20\"></i></span>\n");
      out.write("                抽籤\n");
      out.write("              </a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link\" href=\"./CourseManagement5.html\">\n");
      out.write("                <span class=\"me-1\"><i class=\"fas fa-clipboard-list\"></i></span>\n");
      out.write("                課程\n");
      out.write("              </a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link\" href=\"./company_6.jsp\">\n");
      out.write("                <span class=\"me-1\"><i class=\"fas fa-building\"></i></span>\n");
      out.write("                公司資料\n");
      out.write("              </a>\n");
      out.write("            </li>\n");
      out.write("          </ul>\n");
      out.write("        </div>\n");
      out.write("      </nav>\n");
      out.write("\n");
      out.write("      <!-- 內容 -->\n");
      out.write("      <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n");
      out.write("        <form action=\"./OrderDAO_Impl\" method=\"POST\">\n");
      out.write("          ");

            request.setCharacterEncoding("UTF-8");
          response.setContentType("text/html; charset=UTF-8");
          
      out.write("\n");
      out.write("            ");
 
              java.util.UUID uuid = java.util.UUID.randomUUID();
          String order_ID     = uuid.toString();
          
            String stock_ID        = request.getParameter("stock_ID"       );
            String com_ID          = request.getParameter("com_ID"         );
            String order_price     = request.getParameter("order_price"    ); 
            String order_quant     = request.getParameter("order_quant"    );
            String order_total     = request.getParameter("order_total"    );
            String order_date      = request.getParameter("order_date"     );
            String order_time      = request.getParameter("order_time"     );
            String trans_cond      = request.getParameter("trans_cond"     );
            String trans_way       = request.getParameter("trans_way"      );
            String trans_sellorbuy = request.getParameter("trans_sellorbuy");
            String trans_stats     = request.getParameter("trans_stats"    );
            String trans_report    = request.getParameter("trans_report"   );
            
      out.write("\n");
      out.write("            \n");
      out.write("            ");
 
              out.println("訂單明細"                   +"<br>");
              out.println("------------------------"+"<br>");
              out.println("下單編號:"  +order_ID       +"<br>");
          out.println("證券帳號:"  +stock_ID       +"<br>");
          out.println("股票代號:"  +com_ID         +"<br>");
          out.println("下單價格:"  +order_price    +"<br>");
          out.println("下單數量:"  +order_quant    +"<br>");
          out.println("交易金額:"  +order_total    +"<br>");
          out.println("下單日期:"  +order_date     +"<br>");
          out.println("下單時間:"  +order_time     +"<br>");
          out.println("交易條件:"  +trans_cond     +"<br>");
          out.println("交易方式:"  +trans_way      +"<br>");
          out.println("交易選項:"  +trans_sellorbuy+"<br>");
          out.println("下單狀態:"  +trans_stats    +"<br>");
          //out.println("下單回報:"  +trans_report   +"<br>");
          out.println("-------------------------"+"<br>");
            
      out.write("\n");
      out.write("              <input type=\"submit\"  value=\"確認\" onclick=\"get_datetime()\" class=\"st_submit\">\n");
      out.write("          <input  name=\"order_ID\"        id=\"order_ID\"        type=\"hidden\" value =\"");
      out.print( order_ID       );
      out.write("\">\n");
      out.write("              <input  name=\"stock_ID\"        id=\"stock_ID\"        type=\"hidden\" value =\"");
      out.print( stock_ID       );
      out.write("\">\n");
      out.write("              <input  name=\"com_ID\"          id=\"com_ID\"          type=\"hidden\" value =\"");
      out.print( com_ID         );
      out.write("\">\n");
      out.write("              <input  name=\"order_price\"     id=\"order_price\"     type=\"hidden\" value =\"");
      out.print( order_price    );
      out.write("\">\n");
      out.write("              <input  name=\"order_quant\"     id=\"order_quant\"     type=\"hidden\" value =\"");
      out.print( order_quant    );
      out.write("\">\n");
      out.write("              <input  name=\"order_total\"     id=\"order_total\"     type=\"hidden\" value =\"");
      out.print( order_total    );
      out.write("\">\n");
      out.write("              <input  name=\"order_date\"      id=\"order_date\"      type=\"hidden\" value =\"");
      out.print( order_date     );
      out.write("\">\n");
      out.write("              <input  name=\"order_time\"      id=\"order_time\"      type=\"hidden\" value =\"");
      out.print( order_time     );
      out.write("\">\n");
      out.write("              <input  name=\"trans_cond\"      id=\"trans_cond\"      type=\"hidden\" value =\"");
      out.print( trans_cond     );
      out.write("\">\n");
      out.write("              <input  name=\"trans_way\"       id=\"trans_way\"       type=\"hidden\" value =\"");
      out.print( trans_way      );
      out.write("\">\n");
      out.write("              <input  name=\"trans_sellorbuy\" id=\"trans_sellorbuy\" type=\"hidden\" value =\"");
      out.print( trans_sellorbuy);
      out.write("\">\n");
      out.write("              <input  name=\"trans_stats\"     id=\"trans_stats\"     type=\"hidden\" value =\"");
      out.print( trans_stats    );
      out.write("\">\n");
      out.write("              <input  name=\"trans_report\"    id=\"trans_report\"    type=\"hidden\" value =\"");
      out.print( trans_report   );
      out.write("\">\n");
      out.write("        </form>\n");
      out.write("        \n");
      out.write("        <button id=\"delete_order\" onclick=\"cancel_order(this.id),history.back()\"> 取消</button>\n");
      out.write("\n");
      out.write("      </main>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("  <script src=\"./js/bootstrap.bundle.min.js\"></script>\n");
      out.write("  <script src=\"./Order.js\" async defer></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
